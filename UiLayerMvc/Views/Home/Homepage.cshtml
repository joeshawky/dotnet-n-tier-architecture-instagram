@model ModelViews.Concrete.HomePageViewModel
@{
    ViewData["Title"] = "Home page";
}
<header>
    <link rel="stylesheet" href="~/css/HomePageStyle.css" asp-append-version="true" />
</header>
<!-- Our Header section Starts from here -->
<!-- Code for Showing the Status -->
<main>
    <div class="container">
        <div class="col-9">

            <!-- Code for viewing the Post -->
            @foreach (var post in Model.Posts)
            {
                <div class="card">
                    <div class="top">
                        <a href="/account/profile?userid=@post.UserId">
                            <div class="userDetails">
                                <div class="profilepic">
                                    <div class="profile_img">
                                        <div class="image">
                                            <img src="@post.PostMakerProfilePicturePath"
                                             alt="img8">
                                        </div>
                                    </div>
                                </div>
                                <h3>
                                    @post.PostMakerUsername
                                    <br>
                                    <span>xxx, xxx</span>
                                </h3>
                            </div>
                        </a>
                        <div>
                            <span class="dot">
                                <i class="fas fa-ellipsis-h"></i>
                            </span>
                        </div>
                    </div>
                    <div class="imgBx">
                        <img src=@post.PostImagePath
                         alt="post-1" class="cover">
                    </div>
                    <div class="bottom">
                        <div class="actionBtns">
                            <div class="left">
                                <span class="heart"
                                  onclick=""
                                  data-user-id="@Model.UserId"
                                  data-post-id="@post.PostId">
                                    <span>
                                        <svg aria-label="Like"
                                         color="#262626"
                                         fill=@post.HeartColor
                                         height="24"
                                         role="img"
                                         viewBox="0 0 48 48"
                                         width="24"
                                         class="heart-color">


                                            <!-- Coordinate path  -->

                                            <path d="M34.6 6.1c5.7 0 10.4 5.2 10.4
                                                11.5 0 6.8-5.9 11-11.5 16S25 41.3 24
                                                41.9c-1.1-.7-4.7-4-9.5-8.3-5.7-5-11.5-9.2-11.5-16C3
                                                11.3 7.7 6.1 13.4 6.1c4.2 0 6.5 2 8.1 4.3
                                                1.9 2.6 2.2 3.9 2.5 3.9.3 0 .6-1.3 2.5-3.9
                                                1.6-2.3 3.9-4.3 8.1-4.3m0-3c-4.5 0-7.9
                                                1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1
                                                0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3
                                                1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3
                                                1.1.5 1.6.5.6 0 1.1-.2 1.6-.5 1-.6 2.8-2.2
                                                7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6
                                                48 25 48 17.6c0-8-6-14.5-13.4-14.5z">
                                            </path>
                                        </svg>
                                    </span>
                                </span>
                                <svg aria-label="Comment"
                                 class="_8-yf5 "
                                 color="#262626"
                                 fill="#262626"
                                 height="24"
                                 role="img"
                                 viewBox="0 0 48 48"
                                 width="24">

                                    <!-- Coordinate path  -->
                                    <path clip-rule="evenodd"
                                      d="M47.5 46.1l-2.8-11c1.8-3.3 2.8-7.1 2.8-11.1C47.5
                                        11 37 .5 24 .5S.5 11 .5 24 11 47.5 24 47.5c4 0
                                        7.8-1 11.1-2.8l11 2.8c.8.2 1.6-.6 1.4-1.4zm-3-22.1c0
                                        4-1 7-2.6 10-.2.4-.3.9-.2 1.4l2.1
                                        8.4-8.3-2.1c-.5-.1-1-.1-1.4.2-1.8 1-5.2 2.6-10
                                        2.6-11.4 0-20.6-9.2-20.6-20.5S12.7 3.5 24 3.5
                                        44.5 12.7 44.5 24z"
                                      fill-rule="evenodd">
                                    </path>
                                </svg>
                                <svg aria-label="Share Post"
                                 class="_8-yf5 "
                                 color="#262626"
                                 fill="#262626"
                                 height="24"
                                 role="img"
                                 viewBox="0 0 48 48"
                                 width="24">
                                    <path d="M47.8 3.8c-.3-.5-.8-.8-1.3-.8h-45C.9 3.1.3
                                        3.5.1 4S0 5.2.4 5.7l15.9 15.6 5.5 22.6c.1.6.6
                                        1 1.2 1.1h.2c.5 0 1-.3
                                        1.3-.7l23.2-39c.4-.4.4-1 .1-1.5zM5.2
                                        6.1h35.5L18 18.7 5.2 6.1zm18.7
                                        33.6l-4.4-18.4L42.4 8.6 23.9 39.7z">
                                    </path>
                                </svg>
                            </div>
                            <div class="right">
                                <span class="save"
                                  onclick=""
                                  data-user-id="@Model.UserId"
                                  data-post-id="@post.PostId">
                                    <svg aria-label="Save"
                                     class="_8-yf5 "
                                     color="#262626"
                                     fill=@post.SaveIconColor
                                     height="24"
                                     role="img"
                                     viewBox="0 0 48 48"
                                     width="24">

                                        <!-- Coordinate path  -->
                                        <path d="M43.5 48c-.4 0-.8-.2-1.1-.4L24 29 5.6
                                            47.6c-.4.4-1.1.6-1.6.3-.6-.2-1-.8-1-1.4v-45C3 .7
                                            3.7 0 4.5 0h39c.8 0 1.5.7 1.5 1.5v45c0 .6-.4
                                            1.2-.9 1.4-.2.1-.4.1-.6.1zM24 26c.8
                                            0 1.6.3 2.2.9l15.8 16V3H6v39.9l15.8-16c.6-.6
                                            1.4-.9 2.2-.9z">
                                        </path>
                                    </svg>
                                </span>
                            </div>
                        </div>
                        <a href="#">
                            <p class="likes">@post.PostLikesCount likes</p>

                        </a>
                        <a href="#">
                            <p class="message">
                                <b>@post.PostMakerUsername</b>
                                @post.PostDescription
                            </p>

                        </a>
                        <a class="comments-count" href="/post/view/@post.PostId">
                            @if (post.PostCommentsCount == 0)
                            {
                                <h4 class="comments">0 comments</h4>
                            }
                            else
                            {
                                <h4 class="comments">View all @post.PostCommentsCount comments</h4>
                            }
                        </a>
                        <a href="#">
                            <h5 class="postTime">@post.PostCreationTime</h5>
                        </a>

                        <div class="addComments">
                            <div class="reaction">
                                <h3>
                                    <i class="far fa-smile"></i>
                                </h3>
                            </div>
                            <input type="text"
                               class="text comment-text"
                               placeholder="Add a comment...">
                            <a href="comment" onclick="return false;" class="comment-post-btn" data-post-id="@post.PostId">Post</a>
                        </div>
                    </div>
                </div>
            }

        </div>
        @if (User.Identity.IsAuthenticated)
        {
            <div class="col-3" id="button-block">
                <div class="card">
                    <h4>Suggestions For You</h4>
                    @foreach (var suggestedUser in Model.SuggestedUsers)
                    {
                        <div>
                            <div class="top">
                                <div class="userDetails" onclick="location.href='/account/profile?userid=@suggestedUser.UserId'">
                                    <div class="profilepic">
                                        <div class="profile_img">
                                            <div class="image">
                                                <img src=@suggestedUser.ProfilePicturePath alt="img12">
                                            </div>
                                        </div>
                                    </div>
                                    <h3>
                                        @suggestedUser.Username<br>
                                        @if (suggestedUser.FollowsYou)
                                        {
                                            <span>Follows You</span>
                                        }
                                    </h3>
                                </div>
                                <div>
                                    <button class="follow-btn" href="#">
                                        follow
                                    </button>
                                </div>
                            </div>
                        </div>

                    }


                </div>

                <!-- Our Footer Section will start from Here -->
                <div class="footer">
                    <a class="footer-section" href="#">About</a>
                    <a class="footer-section" href="#">Help</a>
                    <a class="footer-section" href="#">API</a>
                    <a class="footer-section" href="#">Jobs</a>
                    <a class="footer-section" href="#">Privacy</a>
                    <a class="footer-section" href="#">Terms</a>
                    <a class="footer-section" href="#">Locations</a>
                    <br>
                    <a class="footer-section" href="#">Top Accounts</a>
                    <a class="footer-section" href="#">Hashtag</a>
                    <a class="footer-section" href="#">Language</a>
                    <br><br>
                    <span class="footer-section">
                        © 2023 INSTAGRAM FROM FACEBOOK
                    </span>
                </div>
            </div>

        }
    </div>
</main>

@section Scripts{
    <script>
        function CreateUnfollowButton(type) {
            button = document.createElement('button');
            button.className = 'unfollow-btn';
            button.textContent = 'unfollow';

            return button;
        }

        function CreateFollowButton(type) {
            button = document.createElement('button');
            button.className = 'follow-btn';
            button.textContent = 'follow';

            return button;
        }

        async function GetLoggedinUsername() {
            let response = await fetch('/api/users/GetLoggedinUsername')

            if (response.status == 200) return response.text();

        }

        async function SendFollowRequest(loggedInUsername, profileUsername) {
            let data = await fetch(`/api/users/followuser?followerusername=${loggedInUsername}&otherusername=${profileUsername}`, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
            });

            return data.status;
        }

        async function SendUnfollowRequest(loggedInUsername, profileUsername) {
            let data = await fetch(`/api/users/unfollowuser?followerusername=${loggedInUsername}&otherusername=${profileUsername}`, {
                method: 'DELETE',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
            });
            return data.status;
        }



        async function Main() {
            let loggedInUsername = await GetLoggedinUsername();

            let testDiv = document.querySelector('#button-block');


            testDiv.addEventListener('click', async e => {
                if (e.target.className != 'follow-btn') return;

                let thisButton = e.target;

                divWithBtn = e.target.parentNode;

                let profileUsername = e.target.parentNode.previousElementSibling.children[1].firstChild.textContent;
                let data = await SendFollowRequest(loggedInUsername, profileUsername);

                newBtn = CreateUnfollowButton();
                divWithBtn.removeChild(thisButton);
                divWithBtn.appendChild(newBtn);
            });

            testDiv.addEventListener('click', async e => {
                if (e.target.className != 'unfollow-btn') return;

                let thisButton = e.target;

                divWithBtn = e.target.parentNode;
                let profileUsername = e.target.parentNode.previousElementSibling.children[1].firstChild.textContent;

                let data = await SendUnfollowRequest(loggedInUsername, profileUsername);

                newBtn = CreateFollowButton()
                divWithBtn.removeChild(thisButton);
                divWithBtn.appendChild(newBtn);

            });




        }

        Main();

        $(document).ready(function () {
            let userId = 0;
            $.ajax({
                url: "/api/users/getcurrentuserid",
                type: "GET",
                success: function (data) {
                    console.log(data);
                    userId = data;
                }
            });


            $('.comment-post-btn').click(function () {

                if (userId !== 0) {

                    let postId = $(this).attr('data-post-id');
                    let commentText = $(this).siblings('.comment-text');
                    let commentsCount = $(this).parents().siblings('.comments-count').children('.comments');
                    let postCommentVm =
                    {
                        commenterUserId: userId,
                        postId: postId
                    };
                    console.log();

                    if (commentText.val()) {
                        postCommentVm.commentText = commentText.val();
                        commentText.val('');
                        console.log(postCommentVm);
                        $.ajax({
                            url: "/api/comments/postcomment",
                            contentType: "application/json; charset=utf-8",
                            type: "POST",
                            data: JSON.stringify(postCommentVm),
                            success: function (data) {
                                console.log(data);
                                commentText.val('');
                                if (commentsCount.text() == '0 comments') {
                                    console.log('0 comments');
                                    commentsCount.text("View all 1 comments");

                                }
                                else {
                                    let currentComments = parseInt(commentsCount.text().split(' ')[2]);
                                    commentsCount.text("View all " + (currentComments + 1) + " comments");
                                }


                            }
                        });
                    }

                }
            });


            $('.heart').click(function () {
                let likedColor = $(this).children().children();//#f44336, #262626
                let likes = likedColor.parents('.bottom').children().children('.likes');
                let postId = $(this).attr('data-post-id');
                console.log('.heart block');
                if (userId !== 0) {
                    $.ajax({
                        url: "/api/likes/postlike?postid=" + postId + "&userid=" + userId,
                        type: "POST",
                        success: function (data) {

                            if (data === 'Post Liked') {
                                let currentLikes = parseInt(likes.text().split(' ')[0]);
                                likes.text((currentLikes + 1) + ' likes');
                                likedColor.attr('fill', '#f44336');
                            }
                            else {
                                let currentLikes = parseInt(likes.text().split(' ')[0]);
                                likes.text((currentLikes - 1) + ' likes');
                                likedColor.attr('fill', '#262626');

                            }
                        }
                    });

                }

            });

            $('.save').click(function () {
                let savedColor = $(this).children();//#f44336, #262626
                let postId = $(this).attr('data-post-id');
                console.log(savedColor);
                if (userId !== 0) {
                    $.ajax({
                        url: "/api/saves/postsave?postid=" + postId + "&userid=" + userId,
                        type: "POST",
                        success: function (data) {

                            if (data === 'Post Saved') {
                                savedColor.attr('fill', '#f44336');
                            }
                            else {
                                savedColor.attr('fill', '#262626');

                            }
                        }
                    });

                }

            });
        });
    </script>
}