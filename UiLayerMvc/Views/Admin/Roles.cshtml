@using ModelViews.Concrete
@model List<UserDto>
@{
    Layout = "_AdminLayout";
    var selectItems = (List<SelectListItem>) ViewData["RolesSelectItems"];
    var count = 1;
}



<div class="content">

    <!-- Recent Sales Start -->
    <div class="container-fluid pt-4 px-4">
        <div class="bg-secondary text-center rounded p-4">
            <div class="d-flex align-items-center justify-content-between mb-4">
                <h6 class="mb-0">Users count: @Model.Count</h6>
            </div>
            <div class="table-responsive">
                <table class="table text-start align-middle table-bordered table-hover mb-0">
                    <thead>
                        <tr class="text-white">
                            <th scope="col">#</th>
                            <th scope="col">Username</th>
                            <th scope="col">Account creation date</th>
                            <th scope="col">Current role</th>
                            <th scope="col">New role</th>
                            <th scope="col">Save changes</th>
                        </tr>
                    </thead>
                    <tbody>
                        
                        @foreach (var user in Model)
                        {

                            <tr>
                                <th>@count</th>
                                <td>@user.Username</td>
                                <td>@user.CreationDate</td>
                                <td>@user.Role</td>
                                <td>
                                    <select class="form-select" asp-items="selectItems"></select>
                                </td>
                                <td>
                                    <button class="btn btn-info m-2 submit-change">
                                        Save
                                    </button>
                                </td>
                            </tr>
                            count++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- Recent Sales End -->


</div>



@section Scripts{
    <script>

        document.getElementsByClassName('nav-link nav-item')[2].classList.add('active');

        const successNotification = window.createNotification({
            theme: 'success',
            showDuration: 2000,
            positionClass: 'nfc-bottom-left'
        });

        const failNotification = window.createNotification({
            theme: 'Error',
            showDuration: 2000,
            positionClass: 'nfc-bottom-left'
        });

        const alertNotification = window.createNotification({
            theme: 'Warning',
            showDuration: 2000,
            positionClass: 'nfc-bottom-left'
        });

        
        let table = document.querySelector('.table-responsive');
        table.addEventListener('click' ,e => {
            if (e.target.className.includes('submit-change') == false) return;

            let button          = e.srcElement;
            let selectedRole    = button.parentNode.previousElementSibling.children[0].value;
            let username        = button.parentNode.parentNode.children[1].innerText
            let currentRole     = button.parentNode.parentNode.children[3].innerText


            if (!selectedRole){
                alertNotification({
                    title: 'Alert!',
                    message: 'Role was not selected'
                });
                return;
            }

            if (selectedRole == currentRole){
                alertNotification({
                    title: 'Alert!',
                    message: 'New role can not be the same as old role'
                });
                return;
            }

            fetch(`/api/roles/ModifyRole?username=${username}&roleName=${selectedRole}`, {
                method: 'PUT',

            }).then(data => {
                if (data.status == '200'){
                    successNotification({
                        title: 'Success!',
                        message: 'Role changed successfully'
                    })
                }
                button.parentNode.parentNode.children[3].innerText = selectedRole;
            }); 
        });


    </script>
}

